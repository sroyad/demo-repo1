name: "CodeQL Advanced (Optimized, Multi-Lang, Stable)"

on:
  workflow_dispatch:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]
  schedule:
    - cron: "31 19 * * 0"

permissions:
  security-events: write
  contents: read
  actions: read
  packages: read

jobs:
  detect:
    name: Detect languages
    runs-on: ubuntu-latest
    outputs:
      langs_csv: ${{ steps.out.outputs.langs_csv }}
      langs_json: ${{ steps.out.outputs.langs_json }}
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - id: scan
        shell: bash
        run: |
          langs=()

          # Java/Kotlin
          if git ls-files '*.java' '*.kt' '*.kts' | grep -q .; then langs+=("java"); fi

          # JavaScript / TypeScript
          if git ls-files '*.js' '*.jsx' '*.ts' '*.tsx' | grep -q .; then langs+=("javascript"); fi

          # Python
          if git ls-files '*.py' | grep -q .; then langs+=("python"); fi

          # Go
          if git ls-files '*.go' | grep -q .; then langs+=("go"); fi

          # Ruby
          if git ls-files '*.rb' | grep -q .; then langs+=("ruby"); fi

          # C / C++ (analyze without autobuild to avoid failures)
          if git ls-files '*.c' '*.cc' '*.cpp' '*.cxx' '*.h' '*.hpp' | grep -q .; then langs+=("cpp"); fi

          if [ ${#langs[@]} -eq 0 ]; then
            echo "No supported languages detected."
            echo "langs_csv=" >> "$GITHUB_OUTPUT"
            echo 'langs_json=[]' >> "$GITHUB_OUTPUT"
            exit 0
          fi

          csv="$(IFS=,; echo "${langs[*]}")"
          json="$(printf '[%s]' "$(printf '"%s",' "${langs[@]}" | sed 's/,$//')")"

          echo "Detected: $csv"
          echo "langs_csv=$csv" >> "$GITHUB_OUTPUT"
          echo "langs_json=$json" >> "$GITHUB_OUTPUT"

      - id: out
        run: echo "langs_csv=${{ steps.scan.outputs.langs_csv }}"; echo "langs_json=${{ steps.scan.outputs.langs_json }}"

  analyze:
    name: CodeQL Optimized â€¢ ${{ matrix.language }}
    needs: detect
    if: ${{ needs.detect.outputs.langs_json != '[]' && needs.detect.outputs.langs_json != '' }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        language: ${{ fromJson(needs.detect.outputs.langs_json) }}

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Setup Node (for JS/TS)
        if: ${{ matrix.language == 'javascript' }}
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Write CodeQL config (optimized)
        shell: bash
        run: |
          mkdir -p .github/codeql-config
          cat > .github/codeql-config/codeql-config.yml <<'YAML'
          name: org-optimized
          paths-ignore:
            - "**/test/**"
            - "**/__tests__/**"
            - "**/spec/**"
            - "**/jest/**"
            - "**/target/**"
            - "**/build/**"
            - "**/dist/**"
            - "**/coverage/**"
            - "**/node_modules/**"
            - "**/vendor/**"
            - "**/.venv/**"
            - "**/.tox/**"
            - "**/*.min.js"
            - "**/generated/**"
          queries:
            - uses: security-extended
            - uses: security-and-quality
          YAML
          echo "Wrote CodeQL config."

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v4
        with:
          languages: ${{ matrix.language }}
          config-file: ./.github/codeql-config/codeql-config.yml
          ram: 8192
          threads: 0

      # Only autobuild Java when a build file exists; NEVER autobuild C/C++ here
      - name: Autobuild (Java when build files present)
        if: ${{ matrix.language == 'java' && (hashFiles('**/pom.xml') != '' || hashFiles('**/build.gradle*') != '') }}
        uses: github/codeql-action/autobuild@v4

      - name: Skip autobuild (no build metadata or non-compiled lang)
        if: ${{ !(matrix.language == 'java' && (hashFiles('**/pom.xml') != '' || hashFiles('**/build.gradle*') != '')) }}
        run: echo "Autobuild skipped for ${{ matrix.language }}."

      - name: Analyze (${{ matrix.language }})
        uses: github/codeql-action/analyze@v4
        with:
          category: "/language:${{ matrix.language }}/optimized"
        timeout-minutes: 60

  no-langs:
    name: No supported languages
    needs: detect
    if: ${{ needs.detect.outputs.langs_json == '[]' || needs.detect.outputs.langs_json == '' }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "No CodeQL-supported languages found on ubuntu-latest." >> "$GITHUB_STEP_SUMMARY"
